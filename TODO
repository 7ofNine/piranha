- Fix perf. issues in TASSr6 by disabling coded arithmetics for short series
- Fix unnecessarily long series in binomial expansion for pow (maybe fixed with exponentiation by squaring?)
- Use reference counted pointer to psymbols to make them live only as necessary?
- Unify stream_manager and settings?
- Move meta-programming in base_series_* into own headers to improve readability.
- Poisson and poly multiplier: truncator calls also when inserting terms for generality,
  and check for canonical form before final insertion to perform in-line adjustments
  without the need to copy terms during base_series insertion later.
- GMP limb: " A limb means the part of a multi-precision number that fits in a single word.
  Normally a limb contains 32 or 64 bits. The C data type for a limb is mp_limb_t.". Use this
  to evaluate the real size of GMP variables when we will do cache-blocking during multiplications.
  http://gmplib.org/manual/Integer-Special-Functions.html#Integer-Special-Functions
- Drop insert hint for now, modify all calls, then introduce overloaded insert which takes hint and use it
  only where it makes sense.
- Add line - file info into exceptions string.
- Coded multiplication with mpz as codes when going out of range?
- elements_* --> ints_* in int_array for clarity
- int_array --> key_int_array for clarity
- add truncators to polynomials, if they do not impact performance too much.
- implement truncation by degree in expo truncator.
- fix again proxies to be more general. maybe move them inside classes?
- decide whether it is good or not to have degrees stored inside expo arrays.
- enable besselJ for polynomials that are single coefficients without bothering about expo limits.
