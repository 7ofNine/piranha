SET(BOOST_PYTHON_NAME "boost_python")
IF(WIN32)
  SET(BOOST_PYTHON_NAME "${BOOST_PYTHON_NAME}-mgw-mt-d")
ELSE(WIN32)
  SET(BOOST_PYTHON_NAME "${BOOST_PYTHON_NAME}-gcc-mt")
ENDIF(WIN32)

# Find Python libraries
INCLUDE(${CMAKE_ROOT}/Modules/FindPythonLibs.cmake)
FIND_PACKAGE(PythonLibs REQUIRED)
INCLUDE_DIRECTORIES(${PYTHON_INCLUDE_PATH})
FIND_LIBRARY(BOOST_PYTHON_LIBRARY NAMES ${BOOST_PYTHON_NAME})
MESSAGE(STATUS "Python library; " "${PYTHON_LIBRARY}")
STRING(REGEX MATCH libpython[0-9]\\.?[0-9] PYTHON_LIBRARY_VERSION ${PYTHON_LIBRARY})
STRING(REGEX REPLACE \\. "" PYTHON_LIBRARY_VERSION ${PYTHON_LIBRARY_VERSION})
STRING(REGEX REPLACE libpython "" PYTHON_LIBRARY_VERSION ${PYTHON_LIBRARY_VERSION})
MESSAGE(STATUS "Python library version: " ${PYTHON_LIBRARY_VERSION})
SET(PYDEXTENSION FALSE)

IF(${PYTHON_LIBRARY_VERSION} GREATER 24 AND WIN32)
  MESSAGE(STATUS "Python >= 2.5 detected on Windows platform. Output extension for compiled modules will be '.pyd'.")
  SET(PYDEXTENSION TRUE)
ENDIF(${PYTHON_LIBRARY_VERSION} GREATER 24 AND WIN32)

# Trick to locate python's modules directory
IF(WIN32)
  STRING(REGEX REPLACE "libs/libpython.*" "DLLs/" PYTHON_MODULES_PATH ${PYTHON_LIBRARIES})
ELSE(WIN32)
  STRING(REGEX REPLACE "config/libpython.*" "site-packages/" PYTHON_MODULES_PATH ${PYTHON_LIBRARIES})
ENDIF(WIN32)
MESSAGE(STATUS "Python modules install path: " "${PYTHON_MODULES_PATH}")
SET(PYRANHA_INSTALL_PATH ${PYTHON_MODULES_PATH}/pyranha)

MACRO(PYTHONCMOD arg1)
  SET_TARGET_PROPERTIES(${arg1} PROPERTIES PREFIX "")
  IF(PYDEXTENSION)
    SET_TARGET_PROPERTIES(${arg1} PROPERTIES SUFFIX ".pyd")
  ENDIF(PYDEXTENSION)
  TARGET_LINK_LIBRARIES(${arg1} ${MANDATORY_LIBRARIES} ${PYTHON_LIBRARIES} ${BOOST_PYTHON_NAME} ${ARGN})
  STRING(REGEX REPLACE "^_" "" DIR_ARG ${arg1})
  INSTALL(TARGETS ${arg1}
    RUNTIME DESTINATION ${PYRANHA_INSTALL_PATH}/${DIR_ARG}
    LIBRARY DESTINATION ${PYRANHA_INSTALL_PATH}/${DIR_ARG}
  )
  SET(MODULE_NAME ${arg1})
  CONFIGURE_FILE(../__init__.py.template pyranha/${DIR_ARG}/__init__.py)
  INSTALL(FILES __init__.py DESTINATION ${PYRANHA_INSTALL_PATH}/${DIR_ARG})
ENDMACRO(PYTHONCMOD)

# Mandatory targets
ADD_SUBDIRECTORY(Core)

# Optional targets
IF(BUILD_NP)
  ADD_SUBDIRECTORY(Np)
  ADD_SUBDIRECTORY(Npc)
ENDIF(BUILD_NP)

IF(BUILD_LNP)
  ADD_SUBDIRECTORY(Lnp)
  ADD_SUBDIRECTORY(Lnpc)
ENDIF(BUILD_LNP)

IF(BUILD_GSP)
  ADD_SUBDIRECTORY(Gsp)
  ADD_SUBDIRECTORY(Gspc)
ENDIF(BUILD_GSP)

IF(BUILD_PYRANHA_GUI)
  ADD_SUBDIRECTORY(Gui)
ENDIF(BUILD_PYRANHA_GUI)

#IF(BUILD_GMP_SUPPORT)
#  ADD_LIBRARY(pyranha_gmps SHARED pyranha_gmps.cpp)
#  PYTHONCMOD(pyranha_gmps)
#  SET(GMP_IMPORT_COMMAND "from pyranha_gmps import *")
#ENDIF(BUILD_GMP_SUPPORT)

INSTALL(FILES __init__.py DESTINATION ${PYRANHA_INSTALL_PATH})
