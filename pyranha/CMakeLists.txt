SET(PYRANHA_INSTALL_PATH ${PYTHON_MODULES_PATH}/pyranha)
ADD_COMPILE_OPTIONS(/bigobj)
ADD_DEFINITIONS(-D_PIRANHA_DLL_IMPORT_API)  # here we import piranha.dll
INCLUDE_DIRECTORIES(${PYTHON_INCLUDE_DIR})  # everything under here needs the python declarations


MACRO(PYTHON_CPPMODULE arg1)
	SET_TARGET_PROPERTIES(${arg1} PROPERTIES PREFIX "")
	SET_TARGET_PROPERTIES(${arg1} PROPERTIES SUFFIX ".pyd")
	TARGET_LINK_LIBRARIES(${arg1} ${MANDATORY_LIBRARIES} ${PYTHON_LIBRARIES} ${ARGN})
	STRING(REGEX REPLACE "^_" "" DIR_ARG ${arg1})
#	MESSAGE(STATUS "Install files: ${arg1}")
	INSTALL(TARGETS ${arg1}
		RUNTIME DESTINATION ${PYRANHA_INSTALL_PATH}/${DIR_ARG}
		LIBRARY DESTINATION ${PYRANHA_INSTALL_PATH}/${DIR_ARG}
	)
	IF(WIN32 AND NOT MINGW)
		INSTALL(FILES ${WIN_MSVC_DLL_FILES} DESTINATION ${PYRANHA_INSTALL_PATH}/${DIR_ARG}/Microsoft.VC90.CRT)
	ENDIF(WIN32 AND NOT MINGW)
ENDMACRO(PYTHON_CPPMODULE)


MACRO(PYRANHA_MANIPULATOR_INIT arg1)
	STRING(REGEX REPLACE "^_" "" DIR_ARG ${arg1})
	SET(MODULE_NAME ${arg1})
	CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/../template.__init__.py
		${CMAKE_CURRENT_SOURCE_DIR}/__init__.py)
	INSTALL(FILES __init__.py DESTINATION ${PYRANHA_INSTALL_PATH}/${DIR_ARG})
ENDMACRO(PYRANHA_MANIPULATOR_INIT)


MACRO(PYRANHA_MANIPULATOR arg1)
	PYTHON_CPPMODULE(${arg1})
	PYRANHA_MANIPULATOR_INIT(${arg1})
ENDMACRO(PYRANHA_MANIPULATOR)

#MESSAGE(STATUS ${CMAKE_SOURCE_DIR} )
#SET(GUT_PYRANHA_ADDED_SRC ${CMAKE_SOURCE_DIR}/src/boost_system/error_code.cpp)
# Mandatory targets.
ADD_SUBDIRECTORY(Core)
SET(MODULE_LIST \ \"Core\",\ )
ADD_SUBDIRECTORY(Math)
SET(MODULE_LIST ${MODULE_LIST}"Math",\ )
ADD_SUBDIRECTORY(Celmec)
SET(MODULE_LIST ${MODULE_LIST}"Celmec",\ )
ADD_SUBDIRECTORY(Test)
SET(MODULE_LIST ${MODULE_LIST}"Test",\ )
ADD_SUBDIRECTORY(Truncators)
SET(MODULE_LIST ${MODULE_LIST}"Truncators",\ )

# GUI (optional).
IF(BUILD_PYRANHA_GUI)
	SET(MODULE_LIST ${MODULE_LIST}"Gui",\ )
	ADD_SUBDIRECTORY(Gui)
ENDIF(BUILD_PYRANHA_GUI)

# Manipulators.
IF(BUILD_PYRANHA_DFS)
	SET(MODULE_LIST ${MODULE_LIST}"Dfs",\ )
	SET(MANIPULATOR_LIST ${MANIPULATOR_LIST}"Dfs",\ )
	ADD_SUBDIRECTORY(Dfs)
ENDIF(BUILD_PYRANHA_DFS)

IF(BUILD_PYRANHA_DPOLY)
	SET(MODULE_LIST ${MODULE_LIST}"Dpoly",\ )
	SET(MANIPULATOR_LIST ${MANIPULATOR_LIST}"Dpoly",\ )
	ADD_SUBDIRECTORY(Dpoly)
ENDIF(BUILD_PYRANHA_DPOLY)

IF(BUILD_PYRANHA_ZPOLY)
	SET(MODULE_LIST ${MODULE_LIST}"Zpoly",\ )
	SET(MANIPULATOR_LIST ${MANIPULATOR_LIST}"Zpoly",\ )
	ADD_SUBDIRECTORY(Zpoly)
ENDIF(BUILD_PYRANHA_ZPOLY)

IF(BUILD_PYRANHA_QPOLY)
	SET(MODULE_LIST ${MODULE_LIST}"Qpoly",\ )
	SET(MANIPULATOR_LIST ${MANIPULATOR_LIST}"Qpoly",\ )
	ADD_SUBDIRECTORY(Qpoly)
ENDIF(BUILD_PYRANHA_QPOLY)

IF(BUILD_PYRANHA_QQPOLY)
	SET(MODULE_LIST ${MODULE_LIST}"Qqpoly",\ )
	SET(MANIPULATOR_LIST ${MANIPULATOR_LIST}"Qqpoly",\ )
	ADD_SUBDIRECTORY(Qqpoly)
ENDIF(BUILD_PYRANHA_QQPOLY)

IF(BUILD_PYRANHA_DPS)
	SET(MODULE_LIST ${MODULE_LIST}"Dps",\ )
	SET(MANIPULATOR_LIST ${MANIPULATOR_LIST}"Dps",\ )
	ADD_SUBDIRECTORY(Dps)
ENDIF(BUILD_PYRANHA_DPS)

IF(BUILD_PYRANHA_QPS)
	SET(MODULE_LIST ${MODULE_LIST}"Qps",\ )
	SET(MANIPULATOR_LIST ${MANIPULATOR_LIST}"Qps",\ )
	ADD_SUBDIRECTORY(Qps)
ENDIF(BUILD_PYRANHA_QPS)

IF(BUILD_PYRANHA_DQPS)
	SET(MODULE_LIST ${MODULE_LIST}"Dqps",\ )
	SET(MANIPULATOR_LIST ${MANIPULATOR_LIST}"Dqps",\ )
	ADD_SUBDIRECTORY(Dqps)
ENDIF(BUILD_PYRANHA_DQPS)

IF(BUILD_PYRANHA_QQPS)
	SET(MODULE_LIST ${MODULE_LIST}"Qqps",\ )
	SET(MANIPULATOR_LIST ${MANIPULATOR_LIST}"Qqps",\ )
	ADD_SUBDIRECTORY(Qqps)
ENDIF(BUILD_PYRANHA_QQPS)

CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/global.__init__.py
	${CMAKE_CURRENT_SOURCE_DIR}/__init__.py)

INSTALL(FILES __init__.py detail.py DESTINATION ${PYRANHA_INSTALL_PATH})
